spring.application.name=mongodb-example
server.port=9876
#spring.data.mongodb.host=192.168.1.15
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=BookStore

spring.datasource.url=jdbc:postgresql://192.168.1.15:5432/linuxhint
spring.datasource.username=postgres
spring.datasource.password=Ash12ish$$
spring.jpa.properties.hibernate.default_schema=testdb
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.data.jpa.repositories.bootstrap-mode=default
#spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type=trace

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
